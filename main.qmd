---
title: "entrega2"
format: html
editor: visual
---

# Carga de librerías y de datos.

```{r}
install.packages("tidyverse")
library(tidyverse)
mpg_backup=mpg
mpg %>% glimpse
```

# Pregunta 1

Dibujad un gráfico que permita visualizar el número de vehículos de cada fabricante del conjunto de datos.

```{r}
mpg %>% select(c(manufacturer)) %>%
  mutate(manufacturer=str_to_title(manufacturer)) %>% 
  ggplot(aes(x=manufacturer))+
  geom_bar(fill="blue")+
  coord_flip()+
  labs(x="Fabricante", y="Número de vehículos")
  
```

# Pregunta 2

Dibujad un gráfico para mostrar el rendimiento medio en ciudad para cada clase.

```{r}
mpg %>% select(c(cty,class)) %>% 
  group_by(class) %>%
  mutate(class=str_to_title(class)) %>% 
  summarise(mean=mean(cty),.groups = "drop") %>% 
  ggplot(aes(x=class,y=mean,fill=class)) +
  geom_col(show.legend = FALSE) +
  labs(x="Clase", y="Media", fill="Clase")
```

# Pregunta 3

Construid un gráfico para mostrar el rendimiento medio en ciudad para cada clase y tipo de tracción simultáneamente.

```{r}
# manera 1: fusionando las variables
mpg %>% select(c(cty,drv,class)) %>% 
  group_by(class,drv) %>%
  mutate(class=str_to_title(class)) %>% 
  summarise(mean=mean(cty),.groups = "drop") %>% 
  drop_na() %>% 
  unite(col="class_drv",c(class,drv),sep="_",remove=T) %>% 
  ggplot(aes(x=class_drv,y=mean,fill=class_drv)) +
  geom_col(show.legend = FALSE)+
  coord_flip() +
  labs(x="Clase y tipo de tracción", y="Media")
```

```{r}
# manera 2: haciendo distintos graficos
mpg %>% select(c(cty,drv,class)) %>% 
  group_by(class,drv) %>%
  mutate(class=str_to_title(class)) %>% 
  summarise(mean=mean(cty),.groups = "drop") %>% 
  complete(class,drv,fill=list(mean=NA)) %>% 
  ggplot(aes(class,mean))+
  geom_col() +
  facet_grid(rows=vars(drv))+
  coord_flip() +
  labs(x="Clase", y="Media")
  
```
